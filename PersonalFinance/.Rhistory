l = c(1,2,3)
l *4
l = l*4r
l = l*4
l
library(jsonlite)
library(ggplot2)
library(ggmap)
library(geosphere)
library(lubridate)
library(lattice)
data = fromJSON("Location History.json")
data_obj = data$locations
data_obj$timestamp = as.numeric(data_obj$timestampMs)/1000
data_obj$timestampMs = NULL
data_obj$lon = data_obj$longitudeE7/10000000
data_obj$longitudeE7 = NULL
data_obj$lat = data_obj$latitudeE7/10000000
data_obj$latitudeE7 = NULL
data_obj$activitys = NULL
# remove inaccurate data
data_obj = data_obj[which(data_obj$accuracy<=median(data_obj$accuracy)), ]
# data_obj = data_obj[which(data_obj$verticalAccuracy<=50), ]
# caculate distances and dates
shift.vec <- function(vec, shift){
if (length(vec) <= abs(shift)){
rep(NA ,length(vec))
} else {
if (shift >= 0) {
c(rep(NA, shift), vec[1:(length(vec) - shift)]) }
else {
c(vec[(abs(shift) + 1):length(vec)], rep(NA, abs(shift)))
}
}
}
data_obj$lat_end <- shift.vec(data_obj$lat, -1)
data_obj$lon_end <- shift.vec(data_obj$lon, -1)
deg2rad = function(deg) {
rad =  as.numeric(deg) * (pi/180)
rad
}
calcDist = function(row) {
R = 6371 # Radius of the earth in km
dlat = deg2rad(as.numeric(row["lat_end"])-as.numeric(row["lat"]))
dlon = deg2rad(as.numeric(row["lon_end"])-as.numeric(row["lon"]))
a = sin(dlat/2) * sin(dlat/2) + cos(deg2rad(row["lat"])) * cos(deg2rad(row["lat_end"])) * sin(dlon/2) * sin(dlon/2)
c = 2 * atan2(as.numeric(sqrt(a)), as.numeric(sqrt(1-a)))
d = R * c # Distance in km
d / 1.6
}
data_obj$dist_to_prev = apply(data_obj, 1, FUN=calcDist)
data_obj$date = as.Date(as.POSIXct(data_obj$timestamp, origin="1970-01-01"))
data_obj$yearmon = paste(year(data_obj$date), sprintf("%02d", month(data_obj$date)), sep="-")
data = fromJSON("Location History.json")
data_obj = data$locations
data = fromJSON("Location History.json")
data = fromJSON("Location History.json")
data = fromJSON("Location History.json")
library(jsonlite)
data = fromJSON("Location History.json")
data = fromJSON("Location History.json")
library(lubridate)
library(reshape2)
library(zoo)
library(ggplot2)
setwd("~/Developer/data-visualization-projects/PersonalFinance")
# TODO - refactor and make plot prettier
data = read.csv("data.csv")
data$balance = as.numeric(gsub(',', '', as.character(data$balance)))
data$date = as.Date(data$date, "%m/%d/%y")
data = data[order(data$date),]
data$date = format(data$date, "%Y-%m")
dataLong = data
data = reshape(data, timevar='account', idvar='date', direction='wide')
rownames(data) = data$date
colnames(data) = c("date", "BOA_Checkings", "BOA_Savings", "BOA_IRA", "C1_Savings", "Fed_401k")
data$BOA_IRA[1] = 0
data$BOA_IRA = na.locf(data$BOA_IRA)
data$C1_Savings[1] = 0
data$C1_Savings = na.locf(data$C1_Savings)
data$Fed_401k[1] = 0
data$Fed_401k = na.locf(data$Fed_401k)
dataSubset = t(subset(data, select=-c(date)))
labels = c("BOA_Checkings", "BOA_Savings", "BOA_IRA", "C1_Savings", "401k")
colors = c('red', 'yellow', 'purple', 'cyan', 'green')
barplot(as.matrix(dataSubset), col = colors, xlab="Date", ylab="Balance", main = "Bank Accounts Over Time", ylim=c(0,60000))
legend("topleft", labels, cex = 1, fill = colors, bty = "n")
myplot = ggplot(dataLong, aes(x = as.factor(date), y = balance, fill = account)) + geom_area(position = 'stack') + ylim(0,60000)
print(myplot)
gg <- ggplot(dataLong, aes(x=date, y=balance))
gg <- gg + geom_area(aes(colour=account, fill=account))
gg <- gg + scale_x_discrete(labels=levels(dataLong$date))
gg
library(lubridate)
library(reshape2)
library(zoo)
library(ggplot2)
setwd("~/Developer/my-life-data/PersonalFinance")
# TODO - refactor and make plot prettier
data = read.csv("data.csv")
data$balance = as.numeric(gsub(',', '', as.character(data$balance)))
data$date = as.Date(data$date, "%m/%d/%y")
data = data[order(data$date),]
data$date = format(data$date, "%Y-%m")
dataLong = data
data = reshape(data, timevar='account', idvar='date', direction='wide')
rownames(data) = data$date
colnames(data) = c("date", "BOA_Checkings", "BOA_Savings", "BOA_IRA", "C1_Savings", "Fed_401k")
data$BOA_IRA[1] = 0
data$BOA_IRA = na.locf(data$BOA_IRA)
data$C1_Savings[1] = 0
data$C1_Savings = na.locf(data$C1_Savings)
data$Fed_401k[1] = 0
data$Fed_401k = na.locf(data$Fed_401k)
dataSubset = t(subset(data, select=-c(date)))
labels = c("BOA_Checkings", "BOA_Savings", "BOA_IRA", "C1_Savings", "401k")
colors = c('red', 'yellow', 'purple', 'cyan', 'green')
barplot(as.matrix(dataSubset), col = colors, xlab="Date", ylab="Balance", main = "Bank Accounts Over Time", ylim=c(0,60000))
legend("topleft", labels, cex = 1, fill = colors, bty = "n")
myplot = ggplot(dataLong, aes(x = as.factor(date), y = balance, fill = account)) + geom_area(position = 'stack') + ylim(0,60000)
print(myplot)
gg <- ggplot(dataLong, aes(x=date, y=balance))
gg <- gg + geom_area(aes(colour=account, fill=account))
gg <- gg + scale_x_discrete(labels=levels(dataLong$date))
gg
